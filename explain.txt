# Explain 1
- using many sockets instead using one
Creating a new socket means two computers have to discover each other, so there is name lookup, TCP/IP routing and resource allocation involved. Not really cheap but not that expensive either. Unless you send data more than 10 times/second, you won't notice.
If you keep a socket open and don't send data for some time, a firewall between the two computers will eventually decide that this connection is stale and forget about it. The next data packet you send will fail with a timeout.
So the main difference between the two methods is whether you can handle the timeout case properly in your code. You will have to handle this every time you write data to the socket.
In many cases, the code to write is hidden very deep somewhere and the code doesn't actually know that it's writing to a socket plus you will have more than one place where you write data, so the error handling will leak into your design. That's why most people prefer to create a new socket every time, even if it's somewhat expensive.
# End explain 1

# Explain 2
In the context of network communication, JSON data can be sent as a stream of bytes over a stream-oriented protocol such as TCP. The JSON data is serialized into a string representation, typically using the UTF-8 encoding, and then transmitted as a sequence of bytes.
# End Explain 2

# Explain3
When you want to update a file has the same fname or lname, server will inform to you to avoid you forget you has updated it before.
When you want to update a file has the same fname or lname, you must delete the old one before updating  

# Explain 4
https://stackoverflow.com/questions/31785902/can-sockets-be-used-to-connect-multiple-computers-on-different-networks-in-pytho

# Explain 5
https://stackoverflow.com/questions/11687353/is-there-a-limit-to-how-many-threads-i-can-make

# Explain 6
Use hostname, ID for key